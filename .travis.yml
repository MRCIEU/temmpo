language: python

python:
  - '3.6'
  - '3.7'
  # - '3.8'  TODO: Consider v.3.8 support after Django upgrade

before_install:
  # Move source code to a directory structure the application expects.
  - mkdir -p lib/test/src/temmpo
  - shopt -s extglob
  - mv !(lib) lib/test/src/temmpo/
  - cd lib/test/src/temmpo/temmpo/settings/
  - ln -s travis_ci_private_settings.py private_settings.py
  - pwd
  - ls
  - cd $TRAVIS_BUILD_DIR
  - mkdir -p var/abstracts
  - mkdir -p var/data
  - mkdir -p var/log
  - mkdir -p var/results/testing/v1
  - mkdir -p var/results/testing/v3
  - mkdir -p var/results/testing/v4

install:
  - cd $TRAVIS_BUILD_DIR
  - cd lib/test/src/temmpo
  - pip3 install -U pip==20.3.1
  - pip3 install -U setuptools==50.3.2
  - pip3 install pip-tools==5.4.0
  - pip3 freeze
  - pip3 install -r requirements/requirements.txt
  - pip-sync requirements/test.txt

services:
  - mysql
  - redis-server

script:
  - cd $TRAVIS_BUILD_DIR
  - cd lib/test/src/temmpo
  - coverage run --source='.' manage.py test --settings=temmpo.settings.test_mysql --exclude-tag=selenium-test --exclude-tag=slow
  - coverage report --skip-empty --skip-covered -m
  # NB: When deployed Fabric is installed at a system packages level and supports the CI/CD pipeline
  # TODO: Add support for Python 2 fabric testing, see: https://docs.travis-ci.com/user/build-matrix/#using-different-programming-languages-per-job & https://docs.travis-ci.com/user/build-matrix/#listing-individual-jobs
  # - pip install fabric==1.13.1
  # - fab -l -f deploy/fabfile.py

branches:
  only:
  - master
  - /^TMMA-.*$/
